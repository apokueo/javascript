{ Additional for Loop Patterns }

- by combining multiple assignments and finals expressions using the comma operator

Ex. for (let temp, i=0, j=1; j < 30; temp = i, i = j, j = i + temp) 
    console.log(j); 

    Formula to create an endless loop: 
        for (;;) console.log("I will loop forever" ); 

Note that a for loop can always be written as a while loop. In other words: for([initialization]; [condition]; [final-expression])
statement
is equivalent to:
    [initialization]
    while([condition]) {
statement
        [final-expression]
    }

{ switch statements }

- whereas if...else statements allow you to take 1 of 2 paths, swith statements allow you to
  take multiple paths based on a single condition. 
- for switch statements the condition is an expression that evaluates to a value

Syntax is:
    switch(expression) {
        case value1:
            // executed when the resultof expression matches value1
            [break;]
        case value2: 
            // executed when the result of expression matches value2 
            [break;]
            ... (and so on)
        default:
            [break;]

    }

    { for in loop }

    for(variable in object)
        statement

    const player = { name: 'Thomas', rank: 'Midshipman', age: 25}; 
    for (let prop in player) {
        if(!player.hasOwnProperty(prop)) continue; 
        console.log(prop + ': ' + player[prop]); 
    }

    { for of loop }

    for(variable of object)
        statement 

    - can be used on arrays, but more generically on any object that is iterable

    const hand = [randFace(), randFace(), randFace()]; 
    for(let face of hand)
        console.log(`You rolled...${face}!`); 
    
    - great for when you need to loop over an array but don't need to know its index. 
    - in the case that you need to know the index of an array - use a for loop 